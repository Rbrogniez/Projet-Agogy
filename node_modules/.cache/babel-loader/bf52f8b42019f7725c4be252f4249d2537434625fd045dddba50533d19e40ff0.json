{"ast":null,"code":"var _jsxFileName = \"/home/romain/Projet-Agogy - Test (copy)/src/App.js\";\nimport React from 'react';\n\n/*\nfunction VideoComponent({ videoSource }) {\n  return (\n    <div>\n      <video controls autoPlay width={500}>\n        <source src={videoSource} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n    </div>\n  );\n}\n\nfunction ImageComponent({ onImageClick }) {\n  return (\n    <div onClick={onImageClick}>\n      <img src=\"bureau.jpg\" alt=\"Image Interactive\" id=\"interactiveImage\" />\n    </div>\n  );\n}\n\nfunction App() {\n  const [videoVisible, setVideoVisible] = React.useState(false);\n\n  const handleImageClick = () => {\n    // Afficher la vidéo uniquement si elle n'est pas déjà visible\n    if (!videoVisible) {\n      setVideoVisible(true);\n    }\n  };\n\n  const handleZoneClick = () => {\n    // Logique spécifique à la zone1 (peut être différente selon vos besoins)\n    // Afficher la vidéo au clic sur zone1\n    setVideoVisible(true);\n  };\n\n  const returnFromVideo = () => {\n    // Cacher la vidéo\n    setVideoVisible(false);\n  }\n\n  return (\n    <>\n      {!videoVisible && <div>\n        <ImageComponent onImageClick={handleImageClick} />\n        <button id=\"zone1\" className=\"interactiveZone\" onClick={handleZoneClick}></button>\n      </div> }\n      {videoVisible && <div className=\"video-container\">\n        <VideoComponent videoSource=\"fire.mp4\" />\n        <button className=\"back-button\" onClick={returnFromVideo}>Retour</button>\n      </div>}\n    </>\n  );\n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mon application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/romain/Projet-Agogy - Test (copy)/src/App.js"],"sourcesContent":["import React from 'react';\n\n/*\nfunction VideoComponent({ videoSource }) {\n  return (\n    <div>\n      <video controls autoPlay width={500}>\n        <source src={videoSource} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n    </div>\n  );\n}\n\nfunction ImageComponent({ onImageClick }) {\n  return (\n    <div onClick={onImageClick}>\n      <img src=\"bureau.jpg\" alt=\"Image Interactive\" id=\"interactiveImage\" />\n    </div>\n  );\n}\n\nfunction App() {\n  const [videoVisible, setVideoVisible] = React.useState(false);\n\n  const handleImageClick = () => {\n    // Afficher la vidéo uniquement si elle n'est pas déjà visible\n    if (!videoVisible) {\n      setVideoVisible(true);\n    }\n  };\n\n  const handleZoneClick = () => {\n    // Logique spécifique à la zone1 (peut être différente selon vos besoins)\n    // Afficher la vidéo au clic sur zone1\n    setVideoVisible(true);\n  };\n\n  const returnFromVideo = () => {\n    // Cacher la vidéo\n    setVideoVisible(false);\n  }\n\n  return (\n    <>\n      {!videoVisible && <div>\n        <ImageComponent onImageClick={handleImageClick} />\n        <button id=\"zone1\" className=\"interactiveZone\" onClick={handleZoneClick}></button>\n      </div> }\n      {videoVisible && <div className=\"video-container\">\n        <VideoComponent videoSource=\"fire.mp4\" />\n        <button className=\"back-button\" onClick={returnFromVideo}>Retour</button>\n      </div>}\n    </>\n  );\n}*/\n\nfunction App() {\n  return (\n    <div>\n      <h1>Mon application</h1>\n    </div>\n  );\n}\n\n\nexport default App;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA,SAAAC,MAAA,IAAAC,OAAA;AAuDA,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAACC,EAAA,GANQN,GAAG;AASZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}