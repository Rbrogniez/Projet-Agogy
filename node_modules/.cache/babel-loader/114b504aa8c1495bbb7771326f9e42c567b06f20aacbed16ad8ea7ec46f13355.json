{"ast":null,"code":"import React from 'react';\n\n/*\nfunction VideoComponent({ videoSource }) {\n  return (\n    <div>\n      <video controls autoPlay width={500}>\n        <source src={videoSource} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n    </div>\n  );\n}\n\nfunction ImageComponent({ onImageClick }) {\n  return (\n    <div onClick={onImageClick}>\n      <img src=\"bureau.jpg\" alt=\"Image Interactive\" id=\"interactiveImage\" />\n    </div>\n  );\n}\n\nfunction App() {\n  const [videoVisible, setVideoVisible] = React.useState(false);\n\n  const handleImageClick = () => {\n    // Afficher la vidéo uniquement si elle n'est pas déjà visible\n    if (!videoVisible) {\n      setVideoVisible(true);\n    }\n  };\n\n  const handleZoneClick = () => {\n    // Logique spécifique à la zone1 (peut être différente selon vos besoins)\n    // Afficher la vidéo au clic sur zone1\n    setVideoVisible(true);\n  };\n\n  const returnFromVideo = () => {\n    // Cacher la vidéo\n    setVideoVisible(false);\n  }\n\n  return (\n    <>\n      {!videoVisible && <div>\n        <ImageComponent onImageClick={handleImageClick} />\n        <button id=\"zone1\" className=\"interactiveZone\" onClick={handleZoneClick}></button>\n      </div> }\n      {videoVisible && <div className=\"video-container\">\n        <VideoComponent videoSource=\"fire.mp4\" />\n        <button className=\"back-button\" onClick={returnFromVideo}>Retour</button>\n      </div>}\n    </>\n  );\n}\n*/\n\nexport default App;","map":{"version":3,"names":["React","App"],"sources":["/home/romain/Projet-Agogy - Test (copy)/src/App.js"],"sourcesContent":["import React from 'react';\n\n/*\nfunction VideoComponent({ videoSource }) {\n  return (\n    <div>\n      <video controls autoPlay width={500}>\n        <source src={videoSource} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n    </div>\n  );\n}\n\nfunction ImageComponent({ onImageClick }) {\n  return (\n    <div onClick={onImageClick}>\n      <img src=\"bureau.jpg\" alt=\"Image Interactive\" id=\"interactiveImage\" />\n    </div>\n  );\n}\n\nfunction App() {\n  const [videoVisible, setVideoVisible] = React.useState(false);\n\n  const handleImageClick = () => {\n    // Afficher la vidéo uniquement si elle n'est pas déjà visible\n    if (!videoVisible) {\n      setVideoVisible(true);\n    }\n  };\n\n  const handleZoneClick = () => {\n    // Logique spécifique à la zone1 (peut être différente selon vos besoins)\n    // Afficher la vidéo au clic sur zone1\n    setVideoVisible(true);\n  };\n\n  const returnFromVideo = () => {\n    // Cacher la vidéo\n    setVideoVisible(false);\n  }\n\n  return (\n    <>\n      {!videoVisible && <div>\n        <ImageComponent onImageClick={handleImageClick} />\n        <button id=\"zone1\" className=\"interactiveZone\" onClick={handleZoneClick}></button>\n      </div> }\n      {videoVisible && <div className=\"video-container\">\n        <VideoComponent videoSource=\"fire.mp4\" />\n        <button className=\"back-button\" onClick={returnFromVideo}>Retour</button>\n      </div>}\n    </>\n  );\n}\n*/\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}